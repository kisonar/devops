version: '3.6'
services:
  nxlog:
    image: nxlog/nxlog-ce:2.10.2150
    container_name: nxlog
    volumes:
      - ./nxlog/config/nxlog.conf:/etc/nxlog.conf
      - ./nxlog/files/input:/var/log
      - ./nxlog/files/output:/lib
    restart: on-failure
    depends_on:
      - graylog
    networks:
      - graylog

  graylog:
    image: graylog/graylog:5.2.7
    container_name: graylog
    ports:
      - "1514:1514"
      - "9000:9000"
      - "12201:12201"
    restart: on-failure
    environment:
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
      - GRAYLOG_PASSWORD_SECRET=jakiesTamHasloPowinnoByc
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918 #admin/admin
      - GRAYLOG_NODE_ID_FILE=/usr/share/graylog/data/config/node-id
      - GRAYLOG_HTTP_BIND_ADDRESS=0.0.0.0:9000
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - GRAYLOG_MONGODB_URI=mongodb://mongo:27017/graylog
    depends_on:
      - mongo
      - elasticsearch
    volumes:
      - ./graylog/config/server.conf:/etc/graylog/server/server.conf # /etc/graylog/server/server.conf
      #- ./graylog/journal:/var/lib/graylog-server/journal # /var/lib/graylog-server/journal
       # /usr/share/graylog/data/journal/
    links:
      - mongo
      - elasticsearch
    networks:
      - graylog

  mongo:
    image: mongo:6.0.14
    restart: on-failure
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/data/db:/data/db
    networks:
      - graylog

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    container_name: elasticsearch
    restart: on-failure
    environment:
      - http.host=0.0.0.0
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    networks:
      - graylog
    ports:
      - "9200:9200"

  opensearch:
    image: opensearchproject/opensearch:2.12.0
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
      # Can generate a password for `OPENSEARCH_INITIAL_ADMIN_PASSWORD` using a linux device via:
      # tr -dc A-Z-a-z-0-9_@#%^-_=+ < /dev/urandom  | head -c${1:-32}
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=+_8r#wliY3Pv5-HMIf4qzXImYzZf-M=M
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: "on-failure"
    networks:
      - graylog

  grafana:
    image: grafana/grafana-oss # grafana/grafana-oss grafana/grafana-enterprise
    restart: on-failure
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - graylog

# default admin/admin -> change password to admin1
# Marcin/Marcin1

  prometheus:
    image: prom/prometheus:v2.50.1
    restart: on-failure
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./prometheus/data:/prometheus
    networks:
      - graylog

# https://dev.to/chafroudtarek/part-1-how-to-set-up-grafana-and-prometheus-using-docker-i47

networks:
  graylog:
    driver: bridge