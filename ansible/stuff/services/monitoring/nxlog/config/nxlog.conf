## Global section
User        root
Group       root

LogLevel WARNING

define BASEDIR_INPUT /var/log
define BASEDIR_OUTPUT /lib

<Extension csvExtension>
    Module      xm_csv
    Fields      $operator, $dateAsInteger, $status , $count
    FieldTypes  string, integer, string, integer
    Delimiter   ;
</Extension>
<Extension gelf>
    Module      xm_gelf
</Extension>
<Extension exec>
    Module      xm_exec
</Extension>
<Extension multiline>
    Module  xm_multiline
    HeaderLine  /^<Report>/
    EndLine /^</Report>/
    FixedLineCount 100000
</Extension>
<Extension xmlparser>
    Module  xm_xml
</Extension>
<Extension json>
    Module  xm_json
</Extension>
<Extension _fileop>
    Module      xm_fileop
</Extension>

<Input folderMonitoringTxtInput>
    Module  im_file
    File    '%BASEDIR_INPUT%/*.txt'
    <Exec>
        if $raw_event =~ /(^[A-Za-z][A-Za-z]+\-[A-Za-z]+[a-zA-Z])\|(\d{8})\|([A-Za-z][A-Za-z\_]+[A-Za-z])\|([0-9]+)/
        {
          $whole_line = $0;
          $operator = $1;
          $dateAsInteger = $2;
          $status = $3;
          $count = $4;
          #$EventTime = now();
          $EventTime = parsedate($dateAsInteger);
          log_warning("Entry processing finished with success");
          csvExtension->to_csv();
        }
        else{
          log_warning("Entry does not commit requirements: " + $raw_event);
          drop();
        }
    </Exec>
</Input>
<Input folderMonitoringJsonInput>
    Module  im_file
    File    '%BASEDIR_INPUT%/*.json'
    SavePos FALSE
    ReadFromLast FALSE
    InputType   multiline
    <Exec>
        $EventTime = now();
        $originalFileName = file_name();
        log_warning("originalFileName: " + $originalFileName);

        $baseFileName = file_basename($originalFileName);
        #if $baseFileName =~ /^(\w+)\W(.?)/
        if $baseFileName =~ /(.*?)(\_{1})/

        {
            log_warning("---------------------------------------------------------");
            log_warning("baseFileName: " + $baseFileName);
            $var1 = $1;
            $var2 = $2;
            log_warning("var1: " + $var1);
            log_warning("var2: " + $var2);
        }
        else {
            log_warning("---------------------------------------------------------");
            log_warning("File does not fulfill requirements: " + $originalFileName);
            drop();
        }

   </Exec>
</Input>

<Output csvFileOutput>
    #Module om_tcp
    #Host 10.133.116.179
    #Port 12201
    #OutputType GELF_TCP
    Module  om_file
    File    '%BASEDIR_OUTPUT%/out.csv'
</Output>
<Output jsonFileOutput>
    Module  om_file
    File    '%BASEDIR_OUTPUT%/out.json'
</Output>

########################################
# Routes                               #
########################################
<Route txt2csv>
    Path    folderMonitoringTxtInput => csvFileOutput
</Route>
<Route json2json>
    Path    folderMonitoringJsonInput => jsonFileOutput
</Route>